<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Tests\Integration\Supersim\V1;

use Twilio\Exceptions\DeserializeException;
use Twilio\Exceptions\TwilioException;
use Twilio\Http\Response;
use Twilio\Tests\HolodeckTestCase;
use Twilio\Tests\Request;

class NetworkTest extends HolodeckTestCase {
    public function testFetchRequest(): void {
        $this->holodeck->mock(new Response(500, ''));

        try {
            $this->twilio->supersim->v1->networks("HWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")->fetch();
        } catch (DeserializeException $e) {}
          catch (TwilioException $e) {}

        $this->assertRequest(new Request(
            'get',
            'https://supersim.twilio.com/v1/Networks/HWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
        ));
    }

    public function testFetchResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "friendly_name": "AT&T",
                "iso_country": "US",
                "identifiers": [
                    {
                        "mcc": "310",
                        "mnc": "410"
                    }
                ],
                "sid": "HWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "url": "https://supersim.twilio.com/v1/Networks/HWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
            }
            '
        ));

        $actual = $this->twilio->supersim->v1->networks("HWXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")->fetch();

        $this->assertNotNull($actual);
    }

    public function testReadRequest(): void {
        $this->holodeck->mock(new Response(500, ''));

        try {
            $this->twilio->supersim->v1->networks->read();
        } catch (DeserializeException $e) {}
          catch (TwilioException $e) {}

        $this->assertRequest(new Request(
            'get',
            'https://supersim.twilio.com/v1/Networks'
        ));
    }

    public function testReadResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "meta": {
                    "first_page_url": "https://supersim.twilio.com/v1/Networks?PageSize=50&Page=0",
                    "key": "networks",
                    "next_page_url": null,
                    "page": 0,
                    "page_size": 50,
                    "previous_page_url": null,
                    "url": "https://supersim.twilio.com/v1/Networks?PageSize=50&Page=0"
                },
                "networks": [
                    {
                        "friendly_name": "AT&T",
                        "iso_country": "US",
                        "identifiers": [
                            {
                                "mcc": "310",
                                "mnc": "410"
                            }
                        ],
                        "sid": "HWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "url": "https://supersim.twilio.com/v1/Networks/HWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                    }
                ]
            }
            '
        ));

        $actual = $this->twilio->supersim->v1->networks->read();

        $this->assertNotNull($actual);
    }

    public function testReadWithFiltersResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "meta": {
                    "first_page_url": "https://supersim.twilio.com/v1/Networks?IsoCountry=US&Mnc=410&Mcc=310&PageSize=50&Page=0",
                    "key": "networks",
                    "next_page_url": null,
                    "page": 0,
                    "page_size": 50,
                    "previous_page_url": null,
                    "url": "https://supersim.twilio.com/v1/Networks?IsoCountry=US&Mnc=410&Mcc=310&PageSize=50&Page=0"
                },
                "networks": [
                    {
                        "friendly_name": "AT&T",
                        "iso_country": "US",
                        "identifiers": [
                            {
                                "mcc": "310",
                                "mnc": "410"
                            }
                        ],
                        "sid": "HWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "url": "https://supersim.twilio.com/v1/Networks/HWaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                    }
                ]
            }
            '
        ));

        $actual = $this->twilio->supersim->v1->networks->read();

        $this->assertNotNull($actual);
    }
}