<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Tests\Integration\Verify\V2;

use Twilio\Exceptions\DeserializeException;
use Twilio\Exceptions\TwilioException;
use Twilio\Http\Response;
use Twilio\Tests\HolodeckTestCase;
use Twilio\Tests\Request;

class FormTest extends HolodeckTestCase {
    public function testFetchRequest(): void {
        $this->holodeck->mock(new Response(500, ''));

        try {
            $this->twilio->verify->v2->forms("form-push")->fetch();
        } catch (DeserializeException $e) {}
          catch (TwilioException $e) {}

        $this->assertRequest(new Request(
            'get',
            'https://verify.twilio.com/v2/Forms/form-push'
        ));
    }

    public function testFetchResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "form_type": "form-push",
                "forms": {
                    "create_factor": {},
                    "verify_factor": {},
                    "create_challenge": {}
                },
                "form_meta": {},
                "url": "https://verify.twilio.com/v2/Forms/form-push"
            }
            '
        ));

        $actual = $this->twilio->verify->v2->forms("form-push")->fetch();

        $this->assertNotNull($actual);
    }
}